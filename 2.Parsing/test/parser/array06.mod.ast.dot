digraph AST {
  graph [fontname="Times New Roman",fontsize=10];
  node  [fontname="Courier New",fontsize=10];
  edge  [fontname="Times New Roman",fontsize=10];

  node0 [label="m array06",shape=box];
  node136 [label="call Test",shape=box];
  node0 -> node136 [style=dotted];
  node2 [label="p/f Print",shape=box];
  node10 [label=":=",shape=box];
  node4 [label="N",shape=ellipse];
  node10->node4;
  node6 [label="call DIM",shape=box];
  node7 [label="A",shape=ellipse];
  node6->node7;
  node8 [label="1",shape=ellipse];
  node6->node8;
  node10->node6;
  node2 -> node10 [style=dotted];
  node17 [label=":=",shape=box];
  node11 [label="M",shape=ellipse];
  node17->node11;
  node13 [label="call DIM",shape=box];
  node14 [label="A",shape=ellipse];
  node13->node14;
  node15 [label="2",shape=ellipse];
  node13->node15;
  node17->node13;
  node10 -> node17 [style=dotted];
  node20 [label=":=",shape=box];
  node18 [label="i",shape=ellipse];
  node20->node18;
  node19 [label="0",shape=ellipse];
  node20->node19;
  node17 -> node20 [style=dotted];
  node50 [label="while",shape=box];
  node23 [label="<",shape=box];
  node21 [label="i",shape=ellipse];
  node23->node21;
  node22 [label="N",shape=ellipse];
  node23->node22;
  node50->node23;
  node26 [label=":=",shape=box];
  node24 [label="j",shape=ellipse];
  node26->node24;
  node25 [label="0",shape=ellipse];
  node26->node25;
  node50 -> node26 [style=dotted];
  node44 [label="while",shape=box];
  node29 [label="<",shape=box];
  node27 [label="j",shape=ellipse];
  node29->node27;
  node28 [label="M",shape=ellipse];
  node29->node28;
  node44->node29;
  node31 [label="call WriteInt",shape=box];
  node32 [label="A[]",shape=ellipse];
  node33 [label="i",shape=ellipse];
  node32-> node33;
  node34 [label="j",shape=ellipse];
  node32-> node34;
  node31->node32;
  node44 -> node31 [style=dotted];
  node37 [label="call WriteLn",shape=box];
  node31 -> node37 [style=dotted];
  node43 [label=":=",shape=box];
  node39 [label="j",shape=ellipse];
  node43->node39;
  node42 [label="add",shape=box];
  node40 [label="j",shape=ellipse];
  node42->node40;
  node41 [label="1",shape=ellipse];
  node42->node41;
  node43->node42;
  node37 -> node43 [style=dotted];
  node26 -> node44 [style=dotted];
  node49 [label=":=",shape=box];
  node45 [label="i",shape=ellipse];
  node49->node45;
  node48 [label="add",shape=box];
  node46 [label="i",shape=ellipse];
  node48->node46;
  node47 [label="1",shape=ellipse];
  node48->node47;
  node49->node48;
  node44 -> node49 [style=dotted];
  node20 -> node50 [style=dotted];
  node0 -> node2;
  node52 [label="p/f Init",shape=box];
  node60 [label=":=",shape=box];
  node54 [label="N",shape=ellipse];
  node60->node54;
  node56 [label="call DIM",shape=box];
  node57 [label="a",shape=ellipse];
  node56->node57;
  node58 [label="1",shape=ellipse];
  node56->node58;
  node60->node56;
  node52 -> node60 [style=dotted];
  node67 [label=":=",shape=box];
  node61 [label="M",shape=ellipse];
  node67->node61;
  node63 [label="call DIM",shape=box];
  node64 [label="a",shape=ellipse];
  node63->node64;
  node65 [label="2",shape=ellipse];
  node63->node65;
  node67->node63;
  node60 -> node67 [style=dotted];
  node70 [label=":=",shape=box];
  node68 [label="c",shape=ellipse];
  node70->node68;
  node69 [label="0",shape=ellipse];
  node70->node69;
  node67 -> node70 [style=dotted];
  node73 [label=":=",shape=box];
  node71 [label="i",shape=ellipse];
  node73->node71;
  node72 [label="0",shape=ellipse];
  node73->node72;
  node70 -> node73 [style=dotted];
  node104 [label="while",shape=box];
  node76 [label="<",shape=box];
  node74 [label="i",shape=ellipse];
  node76->node74;
  node75 [label="N",shape=ellipse];
  node76->node75;
  node104->node76;
  node79 [label=":=",shape=box];
  node77 [label="j",shape=ellipse];
  node79->node77;
  node78 [label="0",shape=ellipse];
  node79->node78;
  node104 -> node79 [style=dotted];
  node98 [label="while",shape=box];
  node82 [label="<",shape=box];
  node80 [label="j",shape=ellipse];
  node82->node80;
  node81 [label="M",shape=ellipse];
  node82->node81;
  node98->node82;
  node87 [label=":=",shape=box];
  node83 [label="a[]",shape=ellipse];
  node84 [label="i",shape=ellipse];
  node83-> node84;
  node85 [label="j",shape=ellipse];
  node83-> node85;
  node87->node83;
  node86 [label="c",shape=ellipse];
  node87->node86;
  node98 -> node87 [style=dotted];
  node92 [label=":=",shape=box];
  node88 [label="c",shape=ellipse];
  node92->node88;
  node91 [label="add",shape=box];
  node89 [label="c",shape=ellipse];
  node91->node89;
  node90 [label="1",shape=ellipse];
  node91->node90;
  node92->node91;
  node87 -> node92 [style=dotted];
  node97 [label=":=",shape=box];
  node93 [label="j",shape=ellipse];
  node97->node93;
  node96 [label="add",shape=box];
  node94 [label="j",shape=ellipse];
  node96->node94;
  node95 [label="1",shape=ellipse];
  node96->node95;
  node97->node96;
  node92 -> node97 [style=dotted];
  node79 -> node98 [style=dotted];
  node103 [label=":=",shape=box];
  node99 [label="i",shape=ellipse];
  node103->node99;
  node102 [label="add",shape=box];
  node100 [label="i",shape=ellipse];
  node102->node100;
  node101 [label="1",shape=ellipse];
  node102->node101;
  node103->node102;
  node98 -> node103 [style=dotted];
  node73 -> node104 [style=dotted];
  node106 [label="call Print",shape=box];
  node107 [label="a",shape=ellipse];
  node106->node107;
  node104 -> node106 [style=dotted];
  node0 -> node52;
  node109 [label="p/f Test",shape=box];
  node114 [label="call WriteInt",shape=box];
  node115 [label="11111111",shape=ellipse];
  node114->node115;
  node109 -> node114 [style=dotted];
  node118 [label="call WriteLn",shape=box];
  node114 -> node118 [style=dotted];
  node121 [label="call Print",shape=box];
  node122 [label="x",shape=ellipse];
  node121->node122;
  node118 -> node121 [style=dotted];
  node125 [label="call WriteInt",shape=box];
  node126 [label="22222222",shape=ellipse];
  node125->node126;
  node121 -> node125 [style=dotted];
  node129 [label="call WriteLn",shape=box];
  node125 -> node129 [style=dotted];
  node132 [label="call Init",shape=box];
  node133 [label="x",shape=ellipse];
  node132->node133;
  node129 -> node132 [style=dotted];
  node0 -> node109;
}
